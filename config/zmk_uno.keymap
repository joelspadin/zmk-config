/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include "zmk_uno_matrix.dtsi"
// #include "zmk_uno_direct.dtsi"

#define A_MACRON 0x101 0x100

// uni: &uni_wincompose {
//     compose-key = <K_MENU>;
// };
// uni: &mt {};

/ {
    // chosen {
    //     zmk,character_map = &charmap_us;
    // };

    behaviors {
        // ZMK_SEND_STRING(hello_world, "Hello, world!")

        digits: digits {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9>;
        };

        enter_bksp: enter_bksp {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ENTER &kp BKSP>;
        };

        // TODO: remove this for caps word PR
        prog_word: prog_word {
            compatible = "zmk,behavior-caps-word";
            #binding-cells = <0>;
            continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>;
        };

        caps_prog_word: caps_prog_word {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp_caps LSHIFT 0 &prog_word>;
        };

        kp_caps: kp_caps {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&kp>, <&caps_word>;
        };

        to_to: to_to {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&to>, <&to>;
        };
    };

    // bootloader_key {
    //     compatible = "zmk,startup-bootloader-key";
    // };

    macros {
        ble_zero: ble_zero {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <1>;
            tap-ms = <1>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        ble_one: ble_one {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <1>;
            tap-ms = <1>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "base";
            bindings = <
                &kp A     &enter_bksp       &to_to 1 0 &to 2
                &kp SPACE &kp ESC           &to 3      &to 4

                &none &none &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        shift {
            display-name = "shift";
            bindings = <
                &kp A     &caps_prog_word   &trans &trans
                &kp MINUS &trans            &trans &trans

                &trans &trans &trans
            >;
        };


        keypad {
            display-name = "keypad";
            bindings = <
                &digits   &enter_bksp       &trans &trans
                &kp N0    &kp ESC           &trans &trans

                &none &none &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lighting {
            display-name = "lighting";
            bindings = <
                &rgb_ug RGB_TOG   &trans    &trans &trans
                &bl BL_TOG        &trans    &trans &trans

                &trans &trans &trans
            >;
        };

        system {
            label = "system";
            display-name = "system";
            bindings = <
                &ble_zero    &ble_one       &trans &trans
                &out OUT_USB &bt BT_CLR     &trans &trans

                &trans &trans &trans
            >;
        };
    };

    sensors {
        triggers-per-rotation = <36>;
    };
};

&encoder {
    steps = <36>;
	// a-gpios = <&arduino_header 15 GPIO_PULL_UP>;
    // b-gpios = <&arduino_header 14 GPIO_PULL_UP>;
};
